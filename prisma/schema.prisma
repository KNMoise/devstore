// prisma/schema.prisma



model Order {
  id          Int       @id @default(autoincrement())
  userId      Int
  totalAmount Float
  status      String    // 'pending', 'shipped', 'delivered', 'cancelled'
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  user        User      @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
}


model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float    // Price of the product at the time of the order

  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  imageUrl    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  orderItems  OrderItem[]
}


model PasswordReset {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  name          String
  orders        Order[]
  role      String   @default("customer") 
  passwordResets PasswordReset[]  
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")  
}

generator client {
  provider = "prisma-client-js"
}
